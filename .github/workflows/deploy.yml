name: Publish to PyPI and TestPyPI

on: push

jobs:
  build:
    name: Build Distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Get history and tags for SCM versioning to work
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        run: |
          git fetch --prune --unshallow
          git tag -d $(git tag --points-at HEAD)

      - name: Set up Python
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: Build Wheel
        run: uv build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/') # only publish to PyPI on tag pushes
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/TopoNetX
    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: Sign and Upload as GitHub Release
    needs: [publish-to-pypi]
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.1.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release create '${{ github.ref_name }}' --repo '${{ github.repository }}' --notes ""

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: gh release upload '${{ github.ref_name }}' dist/** --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish to TestPyPI
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: [build]
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/TopoNetX

    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution ðŸ“¦ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
